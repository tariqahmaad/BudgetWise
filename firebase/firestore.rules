rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Match any document in the 'users' collection
    match /users/{userId} {
      // Allow a user to:
      // - Read, update, or delete their own user document.
      // - Create their own user document (important for signup).
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;

      // Match any document in the 'accounts' subcollection for a specific user
      match /accounts/{accountId} {
        // Allow a user full read/write access ONLY to their own 'accounts' subcollection.
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Match any document in the 'categories' subcollection for a specific user
      match /categories/{categoryId} {
        // Allow a user full read/write access ONLY to their own 'categories' subcollection.
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Match any document in the 'friends' subcollection for a specific user
      match /friends/{friendId} {
        // Allow a user full read/write access ONLY to their own 'friends' subcollection.
        allow read, write: if request.auth != null && request.auth.uid == userId;

        // Match any document in the 'debts' subcollection for a specific friend
        match /debts/{debtId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }

      // You can add rules for other subcollections (like transactions) here later following the same pattern.

      // Match any document in the 'transactions' subcollection for a specific user
      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // By default, if no rule above matches, access is denied.
    // This ensures collections other than 'users' are protected unless you add specific rules for them.
  }
}
